<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
                        
	<!-- 自动扫描 -->
	
	
	
	<context:component-scan base-package="com" />
	
	<!-- 引入配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties" />
	</bean>

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
      <property name="driverClass" value="${jdbc.driverClassName}" />
      <property name="jdbcUrl" value="${jdbc.url}" />
      <property name="user" value="${jdbc.username}" />
      <property name="password" value="${jdbc.password}" />
      <property name="minPoolSize" value="${jdbc.minIdle}" />
      <property name="maxPoolSize" value="${jdbc.maxIdle}" />
      <property name="initialPoolSize" value="${jdbc.initialSize}" />
      <property name="maxIdleTime" value="${jdbc.maxWait}" />
      <property name="maxStatements" value="100"></property>
      <property name="idleConnectionTestPeriod" value="3600"></property>
      <property name="acquireIncrement" value="1"></property>
    </bean>

	<bean id="dependDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${dependData.jdbc.driver}" />
		<property name="jdbcUrl" value="${dependData.jdbc.url}" />
		<property name="user" value="${dependData.jdbc.username}" />
		<property name="password" value="${dependData.jdbc.password}" />
		<property name="minPoolSize" value="${dependData.jdbc.minIdle}" />
		<property name="maxPoolSize" value="${dependData.jdbc.maxIdle}" />
		<property name="initialPoolSize" value="${dependData.jdbc.initialSize}" />
		<property name="maxIdleTime" value="${dependData.jdbc.maxWait}" />
		<property name="maxStatements" value="100"></property>
		<property name="idleConnectionTestPeriod" value="3600"></property>
		<property name="acquireIncrement" value="1"></property>
	</bean>
	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:com/nix/mapping/data/*.xml"></property>
		<!--<property name="typeAliasesPackage" value="cn.tibet.cas.domain"></property>-->
		<property name="plugins">
			<array>
				<bean class="com.nix.web.interceptor.AuditingInterceptor"></bean>
			</array>
		</property>
	</bean>
	<!--第二链接数据可的sqlsessionFactory配置-->
	<bean id="dependSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dependDataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:com/nix/mapping/dependData/*.xml"></property>
		<!--<property name="typeAliasesPackage" value="cn.tibet.cas.domain"></property>-->
		<property name="plugins">
			<array>
				<bean class="com.nix.web.interceptor.AuditingInterceptor"></bean>
			</array>
		</property>
	</bean>
	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.nix.dao.data" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	<!--第二个SQLSessionFactory包配置-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.nix.dao.depend" />
		<property name="sqlSessionFactoryBeanName" value="dependSqlSessionFactory"></property>
	</bean>


	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!--controller异常处理-->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>
	<bean id="exceptionResslver" class="com.nix.web.controller.CommonExceptionController">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception"/>
			</props>
		</property>
	</bean>
</beans>